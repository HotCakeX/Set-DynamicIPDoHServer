#
# Module manifest for module 'Set-DynamicIPDoHServer' or 'set-ddoh'
#
# Generated by: HotCakeX
#
# Generated on: 1/5/2023
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'Set-DynamicIPDoHServer.psm1'

# Version number of this module.
ModuleVersion = '0.0.8'

# Supported PSEditions
CompatiblePSEditions = @("Desktop","Core")

# ID used to uniquely identify this module
GUID = '85d391d8-097a-4394-b8b7-6eb98eeabb0e'

# Author of this module
Author = 'HotCakeX'

# Company or vendor of this module
CompanyName = 'HotCakeX Inc'

# Copyright statement for this module
Copyright = '(c)2023'

# Description of the functionality provided by this module
Description = @"


üíé Use a DNS over HTTPS server that doesn't have a stable IP address, on Windows 11 üíé

This module will automatically identify the correct and active network adapter/interface and set the Secure DNS settings for it based on parameters supplied by user.
even if Hyper-V virtual switches (Internal, Private, External) are being used and the physical network adapter is virtualized by Hyper-V virtual switch manager or 
VPN's virtual network adapter is being used, all at the same time, the module will still find and enable DoH settings for the correct adapter.

You can create a self-hosted DoH server for free on Cloudflare or other providers, with custom domain name and dynamic IP addresses, which are hard or costly for ISPs, governments etc. to block

please refer to the Github repository of serverless-dns for more info: https://github.com/serverless-dns/serverless-dns


Example usage:

using module's alias: set-ddoh -DoHTemplate "https://example.com/" -DoHDomain "example.com"
using module's name:  set-dynamicIPDoHServer -DoHTemplate "https://example.com/" -DoHDomain "example.com"


‚úÖ Created, targeted and tested on the latest version of Windows 11, on physical hardware and Virtual Machines

‚úÖ Once you run this module for the first time and supply it with your DoH template and DoH domain, it will create a scheduled task that will run the module automatically
based on 2 distinct criteria; 1) as soon as Windows detects the current DNS servers are unreachable 2) every 2 hours in order to check for new IP changes for the dynamic DoH server.
You can fine-tune the interval in Task Scheduler GUI if you like. I haven't had any downtimes in my tests because the module runs miliseconds after Windows detects DNS servers are unreachable,
and even then, Windows still maintains the current active connections using the DNS cache. if your experience is different, please let me know on Github.

‚úÖ the module and the scheduled task will use both IPv4s and IPv6s of the dynamic DoH server. the task will run whether or not any user is logged on.

‚úÖ in order to make sure the module will be able to always acquire the IP addresses of the dynamic DoH server, even when the currently set IPv4s and IPv6s are outdated,
it will first attempt to use the DNS servers set on the system, if it fails to resolve the DoH domain, it will then use Cloudflare's 1.1.1.1 to resolve the IP addresses of the dynamic DoH server.
DNS queries made to Cloudflare's 1.1.1.1 will be un-encrypted and in plain text.

üõë Make sure you have the latest stable PowerShell installed from Github before running this module: https://github.com/PowerShell/PowerShell/releases/latest
(store installed version currently not supported, but soon will be)

üè¥ Disclaimer: I'm not the developer of Serverless-dns, however, since it's a great product and I personally use it, I decided to share this module so that Windows users can easily use it.


üî∑ if you have any feedback about this module, please open a new issue or discussion on Github:
https://github.com/HotCakeX/Set-DynamicIPDoHServer

"@

# Minimum version of the PowerShell engine required by this module
PowerShellVersion = '7.3'

# Name of the PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
# ClrVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @("Set-DynamicIPDoHServer")

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @("Set-DynamicIPDoHServer")

# Variables to export from this module
VariablesToExport = '*'

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @("set-ddoh")

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
FileList = @("Set-DynamicIPDoHServer.psd1","Set-DynamicIPDoHServer.psm1")

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('Security', 'DNS', 'Windows', 'HTTPS', 'DynamicIP', 'DoH')

        # A URL to the license for this module.
        LicenseUri = 'https://github.com/HotCakeX/Set-DynamicIPDoHServer'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/HotCakeX/Set-DynamicIPDoHServer'

        # A URL to an icon representing this module.
        IconUri = 'https://raw.githubusercontent.com/HotCakeX/Set-DynamicIPDoHServer/main/icon.png'

        # ReleaseNotes of this module
        ReleaseNotes = @"

## Version 
* 0.0.1 First release
* 0.0.2 added new parameter to ask user for DoH domain, also it can now choose the correct network adapter if both virtual VPN adapters and Hyper-V virtual switches are being used, all at the time time
* 0.0.3 added more details for the PowerShell Gallery's page
* 0.0.4 fixed some typos in PowerShell Gallery's description page
* 0.0.5 added an icon for the module
* 0.0.6 again fixed the PowerShell description text in PowerShell Gallery
* 0.0.7 modified the scheduled task trigger to run every 2 hours and added a 2nd trigger so the module will run the moment system detects DNS failure
* 0.0.8 fixed the typo in the line above, literally, improved PowerShell Gallery description, and set the scheduled task to end if it runs continuously longer than 1 minute
"@

        # Prerelease string of this module
        # Prerelease = ''

        # Flag to indicate whether the module requires explicit user acceptance for install/update/save
        # RequireLicenseAcceptance = $false

        # External dependent modules of this module
        # ExternalModuleDependencies = @()

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
HelpInfoURI = 'https://github.com/HotCakeX/Set-DynamicIPDoHServer'

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}
